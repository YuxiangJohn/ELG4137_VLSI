library ieee;
use ieee.std_logic_1164.all

entity statecontroller is 
port(  clk : in std_logic;
      
);
end statecontroller;

architecture generalized of statecontroller is
begin 
process(clk)
    type stateT is (init,choice,waiting,compare,Lease);
	 signal state: stateT :=init;
	begin
	   if(clk'event and clk='1')then
		  case state is
		     when init =>
			    if(reset='0') then state<= choice;
				 else state <=init; end if;
			  
			  when choice =>
			  if(reset='0') then
			      state <= waiting;
					end if;
				else state <= init;
				end if;	
			  when waiting =>
			  if(reset='0') then
			     if(C='1') then state <= compare;
				   else if (tot<s) state <= waiting; -- deng compare shuchu
					end if;
				else state <= init;
				end if;	
			  
			  when compare =>
			  if(reset='0') then
			     if(tot>=s) then state <= Lease;  -- deng compare shuchu
				  else state <= waiting; end if;
				else state <=init;
				end if;
				
			  when Lease =>
			     if(reset='0') then
				      state <= choice;
					 end if;
			  else state <=init;
				end if;
			
end generalized;